import {Typography} from "@/shared/ui/Typography";
import PrimaryPattern from "@/shared/images/primary_pattern.svg";
import {Button} from "@/shared/ui/Button";
import {citiesApi} from "@/shared/api/cities";

export const SuperBol2024 = async () => {
  const citiesData = await citiesApi.getCitiesList() || []

  return (
    <section className="container grid grid-cols-2 sm:gap-10 gap-3 sm:py-15 py-4">
      <Typography asChild size="h1" variant="primary" className="col-span-2"><h1>Super Bol 2024</h1></Typography>
      <div className="lg:col-span-1 col-span-2 px-6 py-8 bg-bg-primary/20 rounded-2xl overflow-hidden relative">
        <PrimaryPattern
          className="absolute top-0 left-0 right-0 bottom-0"
          style={{
            opacity: "0.1",
          }}
        />

        <Typography asChild size="h3" className="mb-2">
          <h3>–§–æ—Ä–º–∞—Ç –ø—Ä–æ–µ–∫—Ç–∞</h3>
        </Typography>
        <Typography size="body1">
          –ö–∞—Å—Ç–∏–Ω–≥ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –±—É–¥–µ—Ç –ø—Ä–æ–≤–æ–¥–∏—Ç—å—Å—è –ø–æ —É–Ω–∏–∫–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ  –∏ –º–µ—Ç–æ–¥–∏–∫–µ –æ—Ç–±–æ—Ä–∞, —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π –∫–æ–º–∞–Ω–¥–æ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞. –°–ø–æ—Ä—Ç–∏–≤–Ω–æ–µ —Ä–µ–∞–ª–∏—Ç–∏-—à–æ—É –≤–∫–ª—é—á–∞–µ—Ç –≤ —Å–µ–±—è —ç—Ç–∞–ø –∫–∞—Å—Ç–∏–Ω–≥–∞, –∞ —Ç–∞–∫–∂–µ –≤—Ç–æ—Ä–æ–π –æ—Ç–±–æ—Ä–æ—á–Ω—ã–π –º–∞—Ç—á –∏ —Ñ–∏–Ω–∞–ª.
        </Typography>
      </div>
      <div className="lg:col-span-1 col-span-2 px-6 py-8 bg-bg-yellow/20 rounded-2xl">
        <Typography asChild size="h3" className="mb-2">
          <h3>–î–∞—Ç—ã –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è</h3>
        </Typography>

        <div className="grid grid-rows-4 grid-flow-col gap-1">
          {citiesData.map((city, index) =>
            <Typography key={index} size="body1">
               <CountryIcon country={city.country} /> {city.name_ru}: {new Intl.DateTimeFormat('ru-RU').format(new Date(city.start_at)).substring(0, 2)}-{new Intl.DateTimeFormat('ru-RU').format(new Date(city.end_at)).substring(0, 2)} {new Intl.DateTimeFormat('ru-RU', { month: 'long' }).format(new Date(city.end_at))}
            </Typography>
          )}
        </div>
      </div>
      {/*<div className="col-span-2">*/}
      {/*  <Button variant="primary">–£–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ</Button>*/}
      {/*</div>*/}
    </section>
  )
}

const CountryIcon = ({ country }: { country: "KZ" | "KG" | "UZ" }) => {
  switch (country) {
    case "KZ":
      return <>üá∞üáø</>
    case "KG":
      return <>üá∞üá¨</>
    case "UZ":
      return <>üá∫üáø</>
    default:
      return <>üá∞üáø</>
  }
}